import { StatusBar } from 'expo-status-bar';
import React, { useState } from 'react';
import { StyleSheet, Text, View,Paper,TouchableOpacity } from 'react-native';
import {connect} from 'react-redux';
import { Button,Form,Item, Input, Label, Card, CardItem, Body,Container,Header,Content } from 'native-base';

import { Ionicons } from '@expo/vector-icons'; 
import { LinearGradient } from 'expo-linear-gradient';


import { FontAwesome5 } from '@expo/vector-icons'; 
import { FontAwesome } from '@expo/vector-icons'; 

function Home(props) {

  let gradient = ["#80d6ff","#42a5f5","#0077c2","#42a5f5","#80d6ff"]
  const [nbAdress,setNbAdress] = useState(15)

  console.log(props.listAdress)


let 




let AffichageAdress = ()=>{

  for (let i= 0; i < 12;i++) {

    return (
      <View style={styles.cardsView}> 
      <LinearGradient
      colors={gradient}
      start={{x: 0.0, y: 1.0}} end={{x: 2.0, y: 2.0}}
      >    
      <Card style={{marginBottom:0}}>
        <CardItem header bordered style={styles.itemCard}>         
            <Text style={styles.textHeaderCard}>Adress 1 </Text>
            <TouchableOpacity onPress={() => alert("save")}>
                <FontAwesome name="star" size={24} color="#0077c2" />
            </TouchableOpacity>
            
        </CardItem>
        </Card> 
        <Card style={{marginTop:1}}> 
          <CardItem style={styles.itemCard}>
              <Text style={styles.textCard}>
                16 rue dains hilaire 94100 saint maur 
              </Text>
              <TouchableOpacity onPress={() => alert("delete")}>
                <FontAwesome name="remove" size={24} color="black" />
              </TouchableOpacity>
            
          </CardItem>
        </Card> 
      </LinearGradient>
    </View>
    )

  }

}

  return (
  <View style={styles.container}>
        <View style={styles.content}>
          < AffichageAdress/>
        </View>

        <LinearGradient
        colors={gradient}
          start={{x: 0.0, y: 1.0}} end={{x: 2.0, y: 2.0}}
          style={{ height: 48, width: 200, alignItems: 'center', justifyContent: 'center', borderRadius:50,marginTop:20}}
        >
          <TouchableOpacity style={styles.buttonContainer} onPress={()=>props.navigation.navigate('findadress')}>
            <Text style={styles.buttonText}>
              Ajouter une adresse
            </Text>
          </TouchableOpacity>
        </LinearGradient>
  

    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems:"center",
  },

  cardsView:{
    marginTop:5
  },

  itemCard:{
    display:"flex",
    flexDirection:"row",
    justifyContent:"space-between",
  },

  textHeaderCard:{
    width:"80%",
    fontSize:20
    },

  textCard:{
    width:"80%",
    fontSize:15
    },

  buttonInput:{
    textAlign: 'center',
    color: '#4C64FF',
    padding: 15,
    marginLeft: 1,
    marginRight: 1,
    width: 198,
    alignItems: 'center',
    },
    
  buttonContainer: {
    display:"flex",
    flexDirection:"row",
},
  buttonText: {
    textAlign: 'center',
    color: 'white',
}

});


function mapStateToProps(state) {
  return { listAdress: state.listAdress }
}

function mapDispatchToProps(dispatch) {
  return {
    listadress: function(location) {
        dispatch( {type: 'addPosition',location:location} )
    },

  }
}


export default connect(
  mapStateToProps, 
  mapDispatchToProps
)(Home);

